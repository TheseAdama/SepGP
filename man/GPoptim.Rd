% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GPoptim.R
\name{GPoptim}
\alias{GPoptim}
\alias{GPoptim,SepGP-method}
\title{GPoptim: Hyperparameter Optimization for a SepGP Model}
\usage{
GPoptim(object, maxit = 1000)

\S4method{GPoptim}{SepGP}(object, maxit = 1000)
}
\arguments{
\item{object}{An instance of the \code{SepGP} class representing the Gaussian process model to be optimized.
The \code{SepGP} object should already contain the initial design matrix (\code{D}), observed data (\code{FD}),
polynomial degree (\code{s}), covariance function type (\code{covtype}), and initial hyperparameter values.}

\item{maxit}{(Optional) Integer specifying the maximum number of iterations for the optimization algorithm (refer to the \code{optim} function in the \code{stats} package for details). Default is 1000.}
}
\value{
An optimized \code{SepGP} object with updated hyperparameters:
\itemize{
\item \code{phi}: Optimal values of the covariance hyperparameters.
\item \code{B}: Coefficients of the prior mean based on the optimized hyperparameters.
\item \code{Sigmat}: Temporal covariance matrix adjusted according to the new hyperparameters.
}
}
\description{
The \code{GPoptim} function optimizes the hyperparameters (e.g., spatial covariance function parameters) of a given \code{SepGP} model
using a leave-one-out cross-validation method. This optimization seeks to minimize the error in predicting points
left out of the training set, enhancing the model's predictive accuracy and generalization.
}
\examples{
# Test function
fxt <- function(x, t) {sin(2 * pi * t * (x - t))}
# Design matrix D
D <- matrix(seq(0, 1, length = 6), ncol = 1)
# Define evaluation points
tt <- seq(0, 1, length = 5)
# Compute FD
FD <- apply(array(tt), 1, function(t){apply(D, 1, function(x){fxt(x,t)})})
# Create a SepGP object
gp <- SepGP(D, FD, s = 2, covtype = "gauss")
gp <- GPoptim(gp, maxit=10)
print(gp@phi)
print(gp@B)
print(gp@Sigmat)
}
